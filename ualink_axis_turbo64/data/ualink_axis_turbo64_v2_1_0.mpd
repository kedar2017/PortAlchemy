################################################################################
#
#
#  File:
#        ualink_axis_turbo64_v2_1_0.mpd
#
#  Library:
#        hw/std/pcores/ualink_axis_turbo64_v1_00_a
#
#  Module:
#        ualink_axi_turbo64_v2_1_0.mpd
#
#
#  Description:
#        Microprocessor Peripheral Description File
#
#  Copyright notice:
#        Copyright (C) 2010, 2011 Xilinx, Inc.
#
#
#

BEGIN ualink_axis_turbo64

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION HDL = MIXED
OPTION USAGE_LEVEL = BASE_USER
OPTION STYLE = HDL
OPTION RUN_NGCBUILD = TRUE
OPTION IMP_NETLIST = TRUE
OPTION IP_GROUP = Communication High-Speed:MICROBLAZE
OPTION DESC = NetFPGA-10G AXI4-Stream Generator and Checker
OPTION LONG_DESC = NetFPGA-10G AXI4-Stream generator and Checker

## Bus Interfaces
BUS_INTERFACE BUS = M_AXIS, BUS_STD = AXIS, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = S_AXIS, BUS_STD = AXIS, BUS_TYPE = TARGET
BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, BUS = S_AXI, DT = STRING, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_M_AXIS_DATA_WIDTH = 64, DT = INTEGER, RANGE = (8,32,64,256), BUS = M_AXIS
PARAMETER C_S_AXIS_DATA_WIDTH = 64, DT = INTEGER, RANGE = (8,32,64,256), BUS = S_AXIS
PARAMETER C_M_AXIS_TUSER_WIDTH = 128, DT = INTEGER, RANGE = (128), BUS = M_AXIS:S_AXIS
PARAMETER C_S_AXIS_TUSER_WIDTH = 128, DT = INTEGER, RANGE = (128), BUS = M_AXIS:S_AXIS
PARAMETER C_IFG_SIZE = 5, DT = INTEGER
PARAMETER C_GEN_PKT_SIZE = 16, DT = INTEGER
PARAMETER C_CHECK_PKT_SIZE = 16, DT = INTEGER
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector(31 downto 0), ADDRESS = BASE, PAIR = C_HIGHADDR, BUS = S_AXI, MIN_SIZE = 0x01000, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(31 downto 0), ADDRESS = HIGH, PAIR = C_BASEADDR, BUS = S_AXI, ASSIGNMENT = REQUIRE

## Ports
PORT LED03 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA0  = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA1  = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA2  = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA3  = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA4  = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA5  = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA6  = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA7  = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA8  = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA9  = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA10 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA11 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA12 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA13 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA14 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA15 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA16 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA17 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA18 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA19 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA20 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA21 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA22 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA23 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA24 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA25 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA26 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA27 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA28 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA29 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA30 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA31 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA32 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA33 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA34 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA35 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA36 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA37 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA38 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA39 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA40 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA41 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA42 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA43 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA44 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA45 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA46 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA47 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA48 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA49 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA50 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA51 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA52 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA53 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA54 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA55 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA56 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA57 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA58 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA59 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA60 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA61 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA62 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT CS_M_AXIS_TDATA63 = "", DIR = O, ASSIGNMENT = REQUIRE

PORT aclk = "", DIR = I, SIGIS = CLK, BUS = M_AXIS:S_AXIS, ASSIGNMENT = REQUIRE
PORT aresetn = ARESETN, DIR = I, SIGIS = RST, BUS = S_AXI:M_AXIS:S_AXIS, ASSIGNMENT = REQUIRE

PORT m_axis_tdata = TDATA, DIR = O, VEC = [C_M_AXIS_DATA_WIDTH-1:0], BUS = M_AXIS, ENDIAN = LITTLE
PORT m_axis_tstrb = TSTRB, DIR = O, VEC = [(C_M_AXIS_DATA_WIDTH/8)-1:0], BUS = M_AXIS, ENDIAN = LITTLE
PORT m_axis_tuser = TUSER, DIR = O, VEC = [C_M_AXIS_TUSER_WIDTH-1:0], BUS = M_AXIS, ENDIAN = LITTLE
PORT m_axis_tvalid = TVALID, DIR = O, BUS = M_AXIS
PORT m_axis_tready = TREADY, DIR = I, BUS = M_AXIS
PORT m_axis_tlast = TLAST, DIR = O, BUS = M_AXIS

PORT s_axis_tdata = TDATA, DIR = I, VEC = [C_S_AXIS_DATA_WIDTH-1:0], BUS = S_AXIS, ENDIAN = LITTLE
PORT s_axis_tstrb = TSTRB, DIR = I, VEC = [(C_S_AXIS_DATA_WIDTH/8)-1:0], BUS = S_AXIS, ENDIAN = LITTLE
PORT s_axis_tuser = TUSER, DIR = I, VEC = [C_S_AXIS_TUSER_WIDTH-1:0], BUS = S_AXIS, ENDIAN = LITTLE
PORT s_axis_tvalid = TVALID, DIR = I, BUS = S_AXIS
PORT s_axis_tready = TREADY, DIR = O, BUS = S_AXIS
PORT s_axis_tlast = TLAST, DIR = I, BUS = S_AXIS

PORT S_AXI_ACLK = ACLK, DIR = I, SIGIS = CLK, BUS = S_AXI, ASSIGNMENT = REQUIRE
PORT S_AXI_ARESETN = ARESETN, DIR = I, SIGIS = RST, BUS = S_AXI:M_AXIS:S_AXIS
PORT S_AXI_AWADDR = AWADDR, DIR = I, VEC = [31:0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_AWVALID = AWVALID, DIR = I, BUS = S_AXI
PORT S_AXI_AWREADY = AWREADY, DIR = O, BUS = S_AXI
PORT S_AXI_WDATA = WDATA, DIR = I, VEC = [31:0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WSTRB = WSTRB, DIR = I, VEC = [3:0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WVALID = WVALID, DIR = I, BUS = S_AXI
PORT S_AXI_WREADY = WREADY, DIR = O, BUS = S_AXI
PORT S_AXI_BRESP = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_BVALID = BVALID, DIR = O, BUS = S_AXI
PORT S_AXI_BREADY = BREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARADDR = ARADDR, DIR = I, VEC = [31:0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_ARVALID = ARVALID, DIR = I, BUS = S_AXI
PORT S_AXI_ARREADY = ARREADY, DIR = O, BUS = S_AXI
PORT S_AXI_RDATA = RDATA, DIR = O, VEC = [31:0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_RRESP = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_RVALID = RVALID, DIR = O, BUS = S_AXI
PORT S_AXI_RREADY = RREADY, DIR = I, BUS = S_AXI

END
